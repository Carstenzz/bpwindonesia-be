@devURL = http://localhost:3000/api
@publishedURL = https://your-production-url.com/api

### Register User
POST {{devURL}}/users
Content-Type: application/json

{
  "email": "testuser@example.com",
  "username": "testuser",
  "password": "password123",
  "role": "user"
}

### Login User
# @name login
POST {{devURL}}/users/login
Content-Type: application/json

{
  "username": "testuser",
  "password": "password123"
}

### Set accessToken variable from login response
@accessToken = {{login.response.body.accessToken}}
@refreshToken = {{login.response.body.refreshToken}}

### Refresh Access Token
POST {{devURL}}/users/refresh-token
Content-Type: application/json

{
  "refreshToken": "{{refreshToken}}"
}

### Get All Users (need Bearer token)
GET {{devURL}}/users
Authorization: Bearer {{accessToken}}

### Get User By ID (need Bearer token)
GET {{devURL}}/users/1
Authorization: Bearer {{accessToken}}

### Update User (need Bearer token, can include profile_pic as multipart)
PUT {{devURL}}/users/1
Authorization: Bearer {{accessToken}}
Content-Type: multipart/form-data

--boundary
Content-Disposition: form-data; name="email"

newemail@example.com
--boundary
Content-Disposition: form-data; name="username"

newusername
--boundary
Content-Disposition: form-data; name="role"

user
--boundary
Content-Disposition: form-data; name="profile_pic"; filename="profile.jpg"
Content-Type: image/jpeg

< ./profile.jpg
--boundary--

### Delete User (need Bearer token)
DELETE {{devURL}}/users/1
Authorization: Bearer {{accessToken}}

### Logout User
POST {{devURL}}/users/logout

### Get All Blogs (need Bearer token)
GET {{devURL}}/blogs
Authorization: Bearer {{accessToken}}

### Get Blog By ID (need Bearer token)
GET {{devURL}}/blogs/1
Authorization: Bearer {{accessToken}}

### Create Blog (need Bearer token)
POST {{devURL}}/blogs
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "Blog Title",
  "content": "Blog content"
}

### Update Blog (need Bearer token)
PUT {{devURL}}/blogs/1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "title": "Updated Blog Title",
  "content": "Updated content"
}

### Delete Blog (need Bearer token)
DELETE {{devURL}}/blogs/1
Authorization: Bearer {{accessToken}}

### Get All Events (need Bearer token)
GET {{devURL}}/events
Authorization: Bearer {{accessToken}}

### Get Event By ID (need Bearer token)
GET {{devURL}}/events/1
Authorization: Bearer {{accessToken}}

### Create Event (need Bearer token)
POST {{devURL}}/events
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "name": "Event Name",
  "date": "2025-06-09",
  "location": "Jakarta"
}

### Update Event (need Bearer token)
PUT {{devURL}}/events/1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "name": "Updated Event Name",
  "date": "2025-06-10",
  "location": "Bandung"
}

### Delete Event (need Bearer token)
DELETE {{devURL}}/events/1
Authorization: Bearer {{accessToken}}

### Get All RSVPs (need Bearer token)
GET {{devURL}}/rsvps
Authorization: Bearer {{accessToken}}

### Get RSVP By ID (need Bearer token)
GET {{devURL}}/rsvps/1
Authorization: Bearer {{accessToken}}

### Create RSVP (need Bearer token)
POST {{devURL}}/rsvps
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "event_id": 1,
  "user_id": 1,
  "status": "attending"
}

### Update RSVP (need Bearer token)
PUT {{devURL}}/rsvps/1
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
  "status": "not attending"
}

### Delete RSVP (need Bearer token)
DELETE {{devURL}}/rsvps/1
Authorization: Bearer {{accessToken}}

